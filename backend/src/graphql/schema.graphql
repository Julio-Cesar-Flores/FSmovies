type Query {
  getDashBoard(tkn: String!):UserMovies
  getMovies: [Movie!]
  getUsers: [User]
  findUser(usuario: String!, password: String!): [User]
}

type Mutation {
  addDashBoard(tkn: String!, id: String!): User
  createUser(usuario: String!, password: String!): [User]
  deleteUser(id: String!): Result
  createMovie(
    titulo: String!
    image: String!
    descripcion: String!
    nid: Int!
    likes: Int!
  ): Movie
  deleteMovie(id: String!): Result
  incMovieLikes(id: String!): Result
}

type UserMovies {
  _id: ID!
  usuario: String!
  password: String!
  token: String!
  dashboard: [Movie]
}

type User {
  _id: ID!
  usuario: String!
  password: String!
  token: String!
  dashboard: [String!]
}

type Movie {
  _id: ID!
  titulo: String!
  image: String!
  descripcion: String!
  nid: Int!
  likes: Int!
}

type Result {
  Ok: Boolean
  Msg: String
}
